<?php

$scripthome=$_SERVER['PHP_SELF'];
$scriptpath=$_SERVER["SCRIPT_FILENAME"];
define('FILES_TO_MATCH','#\.(php|php4|php5|phtml|html|css|js|htaccess)#');
define('FILES_TO_NOTMATCH','#\.(php.infected|js.infected|infected)#');

class phpMalCodeScan {
		public $infected_files = array();
		public $scanned_files = array();

		function __construct(){
			$this->scan(dirname(__FILE__));
			$this->sendalert();
		}

		function scan($dir){
			$this->scanned_files[] = $dir;
			$files = scandir($dir);

			if (!is_array($files)){
				throw new Exception('Unable to scan directory ' . $dir . '.  Please make sure proper permissions have been set.');
			}

			foreach($files as $file){
				$scriptpath=$_SERVER["SCRIPT_FILENAME"];
				if ($scriptpath!=''.$dir.'/'.$file.''){
					if (is_file($dir.'/'.$file) && !in_array($dir.'/'.$file,$this->scanned_files) && preg_match(FILES_TO_MATCH,$file) && !preg_match(FILES_TO_NOTMATCH,$file)){
						$this->check(file_get_contents($dir.'/'.$file),$dir.'/'.$file);
					}elseif(is_dir($dir.'/'.$file) && substr($file,0,1) != '.'){
						$this->scan($dir.'/'.$file);
					}
				}
			}
		}

		function check($contents,$file){
			$this->scanned_files[] = $file;
			$matched=0;

			if(preg_match('/(?<![a-z0-9_])eval\((base64|eval|\$_|\$\$|\$[A-Za-z_0-9\{]*(\(|\{|\[))/i',$contents)){
				$matched=$matched+5;
			}

			//JS file hack
			if (preg_match("/eval\(String\.fromCharCode\((.*)\)\)/i", $contents, $matches)){
				if ($matches[1]!=""){
					$matched=$matched+5;
				}
			}

			if(preg_match('/\$(.*) = create_function \((.*),(.*) \(base64_decode \((.*)/i',$contents)){
				$matched=$matched+2;
			}

			if(preg_match('/\$_COOKIE \[str_replace\(\'.\', \'_\', \$_SERVER\[\'HTTP_HOST\'\]\)\]\) . \';\'\); \$(.*)\(\$(.*)\);/i',$contents)) {
				$matched=$matched+1;
			}

			//score or 3 or more
			if ($matched>=3){
				$this->infected_files[] = $file;
			}
		}


		function sendalert(){
			if(count($this->infected_files) != 0) {
				foreach($this->infected_files as $inf) {
					if ($_GET['replace']=="yes"){
						rename($inf, $inf.".infected");
						$this->placefakefile($inf);
						echo "<div>The Following file apears to be infected and has been quarientiended. ".$inf."</div>";
					}else{
						if ($_GET['repair']=="yes"){
							$this->repairfile($inf);
							copy($inf, $inf.".original");
							echo "<div>The Following file apears to be infected we started a repair on the file. ".$inf."</div>";
						}else{
							echo "<div>The Following file apears to be infected. ".$inf."</div>";
						}
					}
				}
			}else{
				$files=count($this->scanned_files);
				echo "<div>We found no infected files in this pass. We scanned $files files.</div>";
			}
		}

		function repairfile($filelocation){
			$data = file_get_contents($filelocation);

			//Javascript attack used to do redirects and more
			if (preg_match("/eval\(String\.fromCharCode\((.*)\)\)/i", $title, $matches)){
				if ($matches[1]!=""){
					$data = str_replace("eval(String.fromCharCode(".$matches[1]."));", "", $data);
				}
			}

			file_put_contents($filelocation, $data);
		}

		function placefakefile($filelocation){
			$file = fopen($filelocation,"w");
			$content = "";
			fwrite($file,base64_decode($content));
			fclose($file);
		}
	}

?>
<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Welcome - Project by Anthony Rossbach</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, user-scalable=no">
    <style>
      html{
        height:100%;
        background: rgb(30,30,30);
      }
      body{
        display: block;
        font-weight: 300;
        background: rgb(30,30,30);
      	color: rgb(120,120,120);
        font-size: 17px;
        line-height: 1.37;
        font-weight:400;
        font-smooth: always;
        font-family: "Open Sans", Helvetica, Arial, sans-serif;
        -webkit-font-smoothing: antialiased;
      }
      a, a:link, a:visited {
      	transform: translate3d(0, 0, 0);
      	-webkit-transform: translate3d(0, 0, 0);
      	-moz-transform: translate3d(0, 0, 0);
      	-o-transform: translate3d(0, 0, 0);
      	transition: ease-in-out 0.1s;
      	-webkit-transition: ease-in-out 0.1s;
      	-moz-transition: ease-in-out 0.1s;
      	-o-transition: ease-in-out 0.1s;
      	position: relative;
        color: rgb(129,191,78);
      }

      a:hover, a:active {
      	text-decoration: none !important;
        color: rgba(129,191,78, 0.7);
      }
      h1, h2, h3{
        font-weight: 400;
        color: rgb(255,255,255);
        margin-top:0px;
        margin-bottom:15px;
      }
      pagename{
        display:block;
        margin: 0px auto;
        margin-top:70px;
        text-align:center;
        max-width:600px;
        padding:10px;
        font-size:28px;
        font-weight:600;
        color: rgb(255,255,255);
      }
      content{
        display:block;
        margin: 0px auto;
        margin-top:20px;
        text-align:left;
        max-width:600px;
        padding:10px;
        border-radius:9px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, .08);
        -webkit-box-shadow: 0 4px 10px rgba(0, 0, 0, .08);
        -moz-box-shadow: 0 4px 10px rgba(0, 0, 0, .08);
        background:rgb(40,40,40);
      }
      credits{
        display:block;
        margin: 0px auto;
        margin-top:20px;
        text-align:center;
        max-width:600px;
        padding:10px;
      }
      warning{
        display:block;
        margin: 0px auto;
        margin-top:20px;
        text-align:center;
        max-width:600px;
        padding:10px;
        font-size:14px;
      }
      .block{
  			border-radius: 9px;
  			background:rgb(70,70,70);
        color:rgb(255,255,255);
        padding:10px;
        margin-bottom:10px;
      }
      textarea {
      	background: #f7f7f7;
      	border: 0px solid #f2f2f2;
      	border: none;
      	border-radius: 9px;
      	color: #5a5656;
      	font-family: inherit;
      	font-size: 14px;
      	outline: none;
      	overflow: hidden;
      	padding: 10px;
      	padding-top: 15px;
      	padding-bottom: 15px;
      	width: auto;
      	margin-top: 5px;
      	margin-bottom: 5px;
      	-webkit-appearance: none;
      	box-sizing: border-box;
      	-moz-box-sizing: border-box;
      	-webkit-box-sizing: border-box;
      	resize: none;
      	-webkit-transition: all 200ms ease-in-out;
      	-moz-transition: all 200ms ease-in-out;
      	-o-transition: all 200ms ease-in-out;
      	transition: all 200ms ease-in-out;
      }
  		textarea:hover, textarea:focus {
  			box-shadow: 0 4px 10px rgba(0, 0, 0, .08);
  			-webkit-box-shadow: 0 4px 10px rgba(0, 0, 0, .08);
  			-moz-box-shadow: 0 4px 10px rgba(0, 0, 0, .08);
  		}
      input,
      input[type="text"],
      input[type="password"] {
      	background: #e5e5e5;
      	border: none;
      	border-radius: 9px;
      	color: #5a5656;
      	font-family: inherit;
      	font-size: 14px;
      	outline: none;
      	padding: 10px;
      	padding-top: 15px;
      	padding-bottom: 15px;
      	max-width: 300px;
      	width: 100%;
      	margin-top: 5px;
      	margin-bottom: 5px;
      	-webkit-appearance: none;
      	box-sizing: border-box;
      	-moz-box-sizing: border-box;
      	-webkit-box-sizing: border-box;
      	-webkit-transition: all 200ms ease-in-out;
      	-moz-transition: all 200ms ease-in-out;
      	-o-transition: all 200ms ease-in-out;
      	transition: all 200ms ease-in-out;
      }
      input:focus,
  		input:hover,
      input[type="text"]:focus,
  		input[type="text"]:hover,
      input[type="password"]:focus
  		input[type="password"]:hover {
      	outline: none;
  			box-shadow: 0 4px 10px rgba(0, 0, 0, .08);
  			-webkit-box-shadow: 0 4px 10px rgba(0, 0, 0, .08);
  			-moz-box-shadow: 0 4px 10px rgba(0, 0, 0, .08);
      }
  		input[type=file]{
  			display: inline-block;
  		}
      button,
      input[type="button"],
      input[type="submit"] {
      	background-color: rgb(46, 204, 113);
      	border: none;
      	border-radius: 9px;
      	color: #f4f4f4;
      	cursor: pointer;
      	font-family: inherit;
  			font-weight: 600;
      	text-transform: uppercase;
      	outline: none;
      	padding: 10px;
      	padding-top: 15px;
      	padding-bottom: 15px;
  			width: 100%;
      	max-width: 300px;
      	margin-top: 5px;
      	margin-bottom: 5px;
      	-webkit-appearance: none;
      	box-sizing: border-box;
      	-moz-box-sizing: border-box;
      	-webkit-box-sizing: border-box;
      	-webkit-transition: all 200ms ease-in-out;
      	-moz-transition: all 200ms ease-in-out;
      	-o-transition: all 200ms ease-in-out;
      	transition: all 200ms ease-in-out;
      }
      button:hover,
      input[type="button"]:hover,
      input[type="submit"]:hover {
      	background-color: rgba(46, 204, 113, 0.8);
  			box-shadow: 0 4px 10px rgba(0, 0, 0, .08);
  			-webkit-box-shadow: 0 4px 10px rgba(0, 0, 0, .08);
  			-moz-box-shadow: 0 4px 10px rgba(0, 0, 0, .08);
      }
  		select {
  			-webkit-appearance: button;
      	-moz-appearance: button;
      	background: #e5e5e5;
      	border: none;
      	border-radius: 9px;
      	color: #5a5656;
      	font-family: inherit;
      	font-size: 14px;
      	outline: none;
      	padding: 10px;
      	padding-top: 15px;
      	padding-bottom: 15px;
      	max-width: 300px;
      	width: 100%;
      	margin-top: 5px;
      	margin-bottom: 5px;
      	box-sizing: border-box;
      	-moz-box-sizing: border-box;
      	-webkit-box-sizing: border-box;
      	-webkit-transition: all 200ms ease-in-out;
      	-moz-transition: all 200ms ease-in-out;
      	-o-transition: all 200ms ease-in-out;
      	transition: all 200ms ease-in-out;
      }
      select:focus
  		select:hover {
      	outline: none;
  			box-shadow: 0 4px 10px rgba(0, 0, 0, .08);
  			-webkit-box-shadow: 0 4px 10px rgba(0, 0, 0, .08);
  			-moz-box-shadow: 0 4px 10px rgba(0, 0, 0, .08);
      }
      [placeholder]::-webkit-input-placeholder {
      	color: inherit;
      }
      [placeholder]:focus::-webkit-input-placeholder {
      	-webkit-transition: all 0.3s ease-in-out;
      	-moz-transition: all 0.3s ease-in-out;
      	-ms-transition: all 0.3s ease-in-out;
      	-o-transition: all 0.3s ease-in-out;
      	transition: all 0.3s ease-in-out;
      	-webkit-transform: translate(300px, 0);
      	-moz-transform: translate(300px, 0);
      	-ms-transform: translate(300px, 0);
      	-o-transform: translate(300px, 0);
      	transform: translate(300px, 0);
      	opacity: 0;
      }
      textarea:focus {
      	outline: none;
      	border: 0px solid #4D9BD6 !important;
  			font-weight: 600;
      }
      .message_error,
  		.message_warning,
  		.message_good,
  		.message_normal,
  		.message_grey{
  			border-radius: 9px;
  			padding: 10px;
  			border: 0px;
  			max-width: 1000px;
  			font-weight: 600;
  			margin: 0px auto;
  			color:#ffffff;
  			margin-top: 0px;
  			margin-bottom:0px;
  			text-align:center;
  		}
  		.message_error strong,
  		.message_warning strong,
  		.message_good strong,
  		.message_normal strong,
  		.message_grey strong{
  			text-decoration: underline;
  		}
  		.message_good {
  			background: rgb(46, 204, 113);
  		}
  		.message_error {
  			background: #e74c3c;
  		}
  		.message_warning {
  			background: #f1c40f;
  		}
  		.message_normal {
  			background: rgb(34, 130, 248);
  		}
  		.message_grey {
  			background: rgb(240,240,240);
  		}
    </style>
  </head>
  <body>
    <pagename>PHP Malware Scanner</pagename>
    <content>
      <p>Welcome to the Malware Scanner, You can find actions below to run and results of the scan. When you run the scan it can take some time as we are checking all scripts on this site.</p>
      <?php
        if (!isset($_GET['scan'])){
          echo "<p style='text-align:center;'><a href='".$scripthome."?scan=true&replace=yes&repair=no'><button style='font-size: 16px;font-weight: 800;'>Run scan and clean</button></a></p>";
					echo "<p style='text-align:center;'><a href='".$scripthome."?scan=true&replace=no&repair=no'><button style='font-size: 16px;font-weight: 800;'>Run scan only</button></a></p>";
					echo "<p style='text-align:center;'><a href='".$scripthome."?scan=true&replace=no&repair=yes'><button style='font-size: 16px;font-weight: 800;'>Run scan and repair<BR>(JS infects only)</button></a></p>";
					echo "<BR><BR>When you run a scan this file will be deleted.";
        }else{
          echo "<h3>Scan results</h3>";
	        new phpMalCodeScan;
					unlink($scriptpath);
        }
      ?>
    </content>
    <credits>Project by Anthony Lee on <a href='https://twitter.com/justanthonylee'>Twitter</a>, and <a href='https://github.com/anthonyrossbach'>Github</a>.</credits><warning>Your use of this script is at your sole risk. All code is provided "as -is", without any warranty, whether express or implied, of its accuracy, completeness. Further, I shall not be liable for any damages you may sustain by using this script, whether direct, indirect, special, incidental or consequential.</warning>
  </body>
</html>
